import Head from 'next/head';
import styles from '@/styles/Home.module.css';
import { useUser, useSupabaseClient } from '@supabase/auth-helpers-react';
import { useRouter } from 'next/router';
import NavBar from '@/components/home/NavBar';
import { SideBarOptionProvider } from '@/context/SideBarOptionCtx';
import RenderMobileView from '@/components/home/mobile/RenderMobileView';
import RenderDesktopView from '@/components/home/RenderDesktopView';
import { ChatCtxProvider } from '@/context/ChatCtx';

export default function Home() {
  const user = useUser();
  const supabase = useSupabaseClient();
  const router = useRouter();

  //TODO: Server list view, create server form, Server view, create server invite form, join server via invite
  //TODO: fix the positioning of the logout button

  const handleLogout = async () => {
    const { error } = await supabase.auth.signOut();
    if (error) console.log(error);
    router.push('/login');
  };

  return (
    <>
      <Head>
        <title>FrostCord</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ChatCtxProvider>
        <SideBarOptionProvider>
          <div className={`${styles.isMobileView}`}>
            <main
              className={`${styles.main} flex flex-col h-full overflow-hidden `}
            >
              <div className=" h-screen bg-grey-800">
                <div className="bg-grey-800 flex flex-col relative h-[85%]">
                  <RenderMobileView />
                </div>
                <div>
                  {!user ? (
                    ''
                  ) : (
                    <button
                      className=" bg-grey-600 hover:bg-grey-700 font-bold py-2 px-4 fixed right-[20px] top-[20px] rounded-xl tracking-wide text-frost-100"
                      onClick={handleLogout}
                    >
                      Logout
                    </button>
                  )}
                </div>
              </div>
              <div
                className={`${styles.bottomNav} bg-grey-950  w-full flex  fixed bottom-[0px]  `}
              >
                <NavBar type="bottom" />
              </div>
            </main>
          </div>
          <div className={`${styles.isDesktopView} `}>
            <main className={`${styles.main} bg-grey-800 `}>
              <RenderDesktopView />
              {!user ? (
                ''
              ) : (
                <button
                  className=" bg-grey-600 hover:bg-grey-700 font-bold py-2 px-4 fixed right-[20px] top-[20px] rounded-xl tracking-wide text-frost-100"
                  onClick={handleLogout}
                >
                  Logout
                </button>
              )}
            </main>
          </div>
        </SideBarOptionProvider>
      </ChatCtxProvider>
    </>
  );
}

{
  /* <div
              className={`${styles.bottomNav} bg-grey-950 fixed bottom-[0px] w-full h-8 flex`}
            ></div> */
}
